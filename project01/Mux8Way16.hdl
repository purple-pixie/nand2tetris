// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
	Not(in=sel[0], out=notsel0);
	Not(in=sel[1], out=notsel1);
	Not(in=sel[2], out=notsel2);
	
	And(a=notsel0, b=notsel1, out=sel00);
	And(a=sel[0], b=notsel1, out=sel01);
	And(a=notsel0, b=sel[1], out=sel10);
	And(a=sel[0], b=sel[1], out=sel11);
	
	And(a=sel00, b=notsel2, out=sel000);
	And(a=sel00, b=sel[2], out=sel100);
	And(a=sel01, b=notsel2, out=sel001);
	And(a=sel01, b=sel[2], out=sel101);
	And(a=sel10, b=notsel2, out=sel010);
	And(a=sel10, b=sel[2], out=sel110);
	And(a=sel11, b=notsel2, out=sel011);
	And(a=sel11, b=sel[2], out=sel111);
	
	Explode16(in=sel000, out=sela);
	Explode16(in=sel001, out=selb);
	Explode16(in=sel010, out=selc);
	Explode16(in=sel011, out=seld);
	Explode16(in=sel100, out=sele);
	Explode16(in=sel101, out=self);
	Explode16(in=sel110, out=selg);
	Explode16(in=sel111, out=selh);
	
	And16(a=a, b=sela, out=outa);
	And16(a=b, b=selb, out=outb);
	And16(a=c, b=selc, out=outc);
	And16(a=d, b=seld, out=outd);
	And16(a=e, b=sele, out=oute);
	And16(a=f, b=self, out=outf);
	And16(a=g, b=selg, out=outg);
	And16(a=h, b=selh, out=outh);
	
	Or16(a=outa, b=outb, out=or1);
	Or16(a=outc, b=or1, out=or2);
	Or16(a=outd, b=or2, out=or3);
	Or16(a=oute, b=or3, out=or4);
	Or16(a=outf, b=or4, out=or5);
	Or16(a=outg, b=or5, out=or6);
	Or16(a=outh, b=or6, out=out);

}